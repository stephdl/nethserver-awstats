#!/usr/bin/perl

#
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use warnings;
use strict;
use JSON;
use esmith::ConfigDB;
use NethServer::ApiTools;

my $db = esmith::ConfigDB->open_ro;
my $input = NethServer::ApiTools::readInput();
my $cmd = $input->{'action'} || '';
my $data;
my %ret;


if ($cmd eq 'configuration') {
    my %awstats = (
            MaxNbOfDomain => $db->get_prop('awstats','MaxNbOfDomain'),
            Users => $db->get_prop('awstats','Users'),
            MinHitBrowser => $db->get_prop('awstats','MinHitBrowser'),
            MaxNbOfLoginShown => $db->get_prop('awstats','MaxNbOfLoginShown'),
            MaxNbOfRefererShown => $db->get_prop('awstats','MaxNbOfRefererShown'),
            MinHitKeyphrase => $db->get_prop('awstats','MinHitKeyphrase'),
            MinHitDownloads => $db->get_prop('awstats','MinHitDownloads'),
            MinHitOs => $db->get_prop('awstats','MinHitOs'),
            Minute => $db->get_prop('awstats','Minute'),
            MinHitFile => $db->get_prop('awstats','MinHitFile'),
            DnsLookup => $db->get_prop('awstats','DnsLookup'),
            MinHitDomain => $db->get_prop('awstats','MinHitDomain'),
            MaxNbOfBrowsersShown => $db->get_prop('awstats','MaxNbOfBrowsersShown'),
            MaxNbOfDownloadsShown => $db->get_prop('awstats','MaxNbOfDownloadsShown'),
            MaxNbOfPageShown => $db->get_prop('awstats','MaxNbOfPageShown'),
            skipPrivateIp => $db->get_prop('awstats','skipPrivateIp'),
            MaxNbOfKeyphrasesShown => $db->get_prop('awstats','MaxNbOfKeyphrasesShown'),
            MinHitHost => $db->get_prop('awstats','MinHitHost'),
            MaxNbOfScreenSizesShown => $db->get_prop('awstats','MaxNbOfScreenSizesShown'),
            PdfReport => $db->get_prop('awstats','PdfReport'),
            status => $db->get_prop('awstats','status'),
            MinHitKeyword => $db->get_prop('awstats','MinHitKeyword'),
            MinHitRefer => $db->get_prop('awstats','MinHitRefer'),
            MaxNbOfOsShown => $db->get_prop('awstats','MaxNbOfOsShown'),
            MinHitScreenSize => $db->get_prop('awstats','MinHitScreenSize'),
            MinHitLogin => $db->get_prop('awstats','MinHitLogin'),
            MaxNbOfRobotShown => $db->get_prop('awstats','MaxNbOfRobotShown'),
            MaxNbOfHostsShown => $db->get_prop('awstats','MaxNbOfHostsShown'),
            GeoIP => $db->get_prop('awstats','GeoIP'),
            MinHitRobot => $db->get_prop('awstats','MinHitRobot'),
            MaxNbOfKeywordsShown => $db->get_prop('awstats','MaxNbOfKeywordsShown'),
            access => $db->get_prop('awstats','access'),
            SendReport => $db->get_prop('awstats','SendReport')
            );

    $ret{'configuration'} = \%awstats;
    print encode_json(\%ret);
    exit (0);

}
else {
    NethServer::ApiTools::error();
}